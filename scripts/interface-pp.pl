#!/usr/bin/env perl

$param_cnt = 0;

while (<>) {
    if (/^#interface\s+(\S+)/) {
        $name = $1;
    }
    if ( /^#param\s*\(\s*(\S+)\s+(\S+)\s+(\S+)\s*\)/ ) {
         # Form: type formal_name actual_name
         $param_type[$param_cnt] = $1;
         $param_name[$param_cnt] = $2;
         $arg_name[$param_cnt] = $3;
         $param_cnt++;
    }
    elsif ( /^#param\s*\(\s*(\S+)\s+(\S+)\s*\)/ ) {
         # Form: type formal_name
         # actual_name same as formal_name
         $param_type[$param_cnt] = $1;
         $param_name[$param_cnt] = $2;
         $arg_name[$param_cnt] = $2;
         $param_cnt++;
    }
}

print "\n";
print "//*****************************************************************************\n";
print "//*******   THIS FILE WAS GENERATED BY interface-pp.pl -- DO NOT EDIT   *******\n";
print "//*****************************************************************************\n";
print "\n";
print "#define ${name}_INTERFACE_PARAMS() \\\n";
for ($i = 0; $i < ($param_cnt - 1); $i++) {
    print "    $param_type[$i] $param_name[$i], \\\n";
}
print "    $param_type[$i] $param_name[$i] \\\n";
print "// end macro\n\n";

print "\n";
print "#define ${name}_INTERFACE_DECL() \\\n";
for ($i = 0; $i < $param_cnt; $i++) {
    print "    $param_type[$i] $param_name[$i]; \\\n";
}
print "// end macro\n\n";

print "\n";
print "#define ${name}_INTERFACE_ARGS() \\\n";
for ($i = 0; $i < ($param_cnt - 1); $i++) {
    print "    $arg_name[$i], \\\n";
}
    print "    $arg_name[$i] \\\n";
print "// end macro\n\n";

print "\n";
print "#define ${name}_INTERFACE_INIT() \\\n";
for ($i = 0; $i < ($param_cnt - 1); $i++) {
    print "    $param_name[$i] ( $param_name[$i] ), \\\n";
}
print "    $param_name[$i] ( $param_name[$i] ) \\\n";
print "// end macro\n\n";

print "\n";
print "#define ${name}_INTERFACE_CAST() \\\n";
for ($i = 0; $i < $param_cnt; $i++) {
    print "    static_cast<void>($param_name[$i]); \\\n";
}
print "// end macro\n\n";

